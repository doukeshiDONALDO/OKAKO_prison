CCS PCM C Compiler, Version 3.127, 16805

               Filename: Y:\マイコン制御\p873_011.LST

               ROM used: 87 (2%)
                         Largest free fragment is 2048
               RAM used: 8 (4%) at main() level
                         9 (5%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   017
0003:  NOP
....................  //	<< p873_011.c >>		2012/02 Y.Takada  
.................... //	Port_B 　: LED_bord  
.................... //  
.................... #include <j:\ccs-c\devices\16f873a.h> 
....................  //////// Standard Header file for the PIC16F873A device ////////////////  
.................... #device PIC16F873A  
.................... #list  
....................  
.................... #Fuses HS,NOWDT,NOPROTECT,NOLVP  
.................... #use delay(clock=20000000)  
0004:  MOVLW  29
0005:  MOVWF  04
0006:  MOVF   00,W
0007:  BTFSC  03.2
0008:  GOTO   016
0009:  MOVLW  06
000A:  MOVWF  21
000B:  CLRF   20
000C:  DECFSZ 20,F
000D:  GOTO   00C
000E:  DECFSZ 21,F
000F:  GOTO   00B
0010:  MOVLW  7B
0011:  MOVWF  20
0012:  DECFSZ 20,F
0013:  GOTO   012
0014:  DECFSZ 00,F
0015:  GOTO   009
0016:  RETLW  00
.................... void main(void)  
.................... {  
.................... 	int a0,i;  
0017:  CLRF   04
0018:  MOVLW  1F
0019:  ANDWF  03,F
001A:  MOVLW  07
001B:  BSF    03.5
001C:  MOVWF  1F
001D:  MOVLW  07
001E:  BCF    03.5
001F:  MOVWF  1F
.................... 	set_tris_a(0x1f);  
0020:  MOVLW  1F
0021:  BSF    03.5
0022:  MOVWF  05
.................... 	set_tris_b(0x00);					//	PORT_B		output	LED  
0023:  MOVLW  00
0024:  MOVWF  06
.................... 	output_b(0x00);  
0025:  MOVLW  00
0026:  MOVWF  06
0027:  BCF    03.5
0028:  CLRF   06
.................... 	  
.................... 	a0 = 1;  
0029:  MOVLW  01
002A:  MOVWF  26
.................... 	while( a0 != 0 )	{					  
002B:  MOVF   26,F
002C:  BTFSC  03.2
002D:  GOTO   036
.................... 		a0 = input_a() & 0x01;  
002E:  MOVLW  FF
002F:  BSF    03.5
0030:  MOVWF  05
0031:  BCF    03.5
0032:  MOVF   05,W
0033:  ANDLW  01
0034:  MOVWF  26
.................... 	}  
0035:  GOTO   02B
.................... 	for(i=0;i<10;i++)	{  
0036:  CLRF   27
0037:  MOVF   27,W
0038:  SUBLW  09
0039:  BTFSS  03.0
003A:  GOTO   056
.................... 		output_b(0xff);  
003B:  MOVLW  00
003C:  BSF    03.5
003D:  MOVWF  06
003E:  MOVLW  FF
003F:  BCF    03.5
0040:  MOVWF  06
.................... 		delay_ms(800);  
0041:  MOVLW  04
0042:  MOVWF  28
0043:  MOVLW  C8
0044:  MOVWF  29
0045:  CALL   004
0046:  DECFSZ 28,F
0047:  GOTO   043
.................... 		output_b(0x00);  
0048:  MOVLW  00
0049:  BSF    03.5
004A:  MOVWF  06
004B:  BCF    03.5
004C:  CLRF   06
.................... 		delay_ms(800);  
004D:  MOVLW  04
004E:  MOVWF  28
004F:  MOVLW  C8
0050:  MOVWF  29
0051:  CALL   004
0052:  DECFSZ 28,F
0053:  GOTO   04F
.................... 	}  
0054:  INCF   27,F
0055:  GOTO   037
.................... }	 
0056:  SLEEP
