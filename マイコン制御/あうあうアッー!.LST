CCS PCM C Compiler, Version 3.127, 16805

               Filename: G:\マイコン制御\あうあうアッー!.LST

               ROM used: 186 (5%)
                         Largest free fragment is 2048
               RAM used: 17 (9%) at main() level
                         18 (9%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   062
0003:  NOP
....................  //	<< auaua-.c >>		2012/08 M.DONALD  
.................... //	Port_A  
.................... //	Port_B  
.................... //	Port_C  
.................... #include <j:\ccs-c\devices\16f873a.h> 
....................  //////// Standard Header file for the PIC16F873A device ////////////////  
.................... #device PIC16F873A  
.................... #list  
....................  
.................... #Fuses HS,NOWDT,NOPROTECT,NOLVP			  
.................... #use delay(clock=20000000)  
*
002B:  MOVLW  31
002C:  MOVWF  04
002D:  MOVF   00,W
002E:  BTFSC  03.2
002F:  GOTO   03D
0030:  MOVLW  06
0031:  MOVWF  21
0032:  CLRF   20
0033:  DECFSZ 20,F
0034:  GOTO   033
0035:  DECFSZ 21,F
0036:  GOTO   032
0037:  MOVLW  7B
0038:  MOVWF  20
0039:  DECFSZ 20,F
003A:  GOTO   039
003B:  DECFSZ 00,F
003C:  GOTO   030
003D:  RETLW  00
.................... char	aa,bb,cc,dd,ee,ff,gg,aaa,bbb,ccc;  
.................... void sw_check(void);  
.................... void sw_check2(void);  
.................... void main(void)  
.................... {  
*
0062:  CLRF   04
0063:  MOVLW  1F
0064:  ANDWF  03,F
0065:  MOVLW  07
0066:  BSF    03.5
0067:  MOVWF  1F
0068:  MOVLW  07
0069:  BCF    03.5
006A:  MOVWF  1F
006B:  MOVLW  FF
006C:  MOVWF  2F
.................... 	  
.................... //	0x02;   
.................... //	0x04;  
.................... //	0x06;  
.................... //	0x08;  
.................... //	0x0a;  
.................... //	0x0c;  
.................... //	0x0e;  
....................   
.................... 	set_tris_a(0x01);					//	PORT_A1 input 	  
006D:  MOVLW  01
006E:  BSF    03.5
006F:  MOVWF  05
.................... 	set_tris_b(0x01);					//	PORT_B1 input	  
0070:  MOVLW  01
0071:  MOVWF  06
.................... 	set_tris_c(0x01);					//	PORT_C1 input		  
0072:  MOVLW  01
0073:  MOVWF  07
0074:  BCF    03.5
0075:  MOVWF  2F
....................   
.................... 		aa = 0x0e;  
0076:  MOVLW  0E
0077:  MOVWF  25
.................... 		bb = 0x0e;  
0078:  MOVLW  0E
0079:  MOVWF  26
.................... 		cc = 0x0e;  
007A:  MOVLW  0E
007B:  MOVWF  27
.................... 		dd = 0x0c;  
007C:  MOVLW  0C
007D:  MOVWF  28
.................... 		ee = 0x0c;  
007E:  MOVLW  0C
007F:  MOVWF  29
.................... 		ff = 0x0c;  
0080:  MOVLW  0C
0081:  MOVWF  2A
....................   
.................... 	while(1)	{						//	無限ループスタート  
.................... 		output_a(aa);  
0082:  MOVLW  00
0083:  BSF    03.5
0084:  MOVWF  05
0085:  BCF    03.5
0086:  MOVF   25,W
0087:  MOVWF  05
.................... 		output_b(bb);  
0088:  MOVLW  00
0089:  BSF    03.5
008A:  MOVWF  06
008B:  BCF    03.5
008C:  MOVF   26,W
008D:  MOVWF  06
.................... 		output_c(cc);  
008E:  MOVLW  00
008F:  MOVWF  2F
0090:  BSF    03.5
0091:  MOVWF  07
0092:  BCF    03.5
0093:  MOVF   27,W
0094:  MOVWF  07
.................... 		sw_check();  
0095:  GOTO   004
.................... 		delay_ms(500);	  
0096:  MOVLW  02
0097:  MOVWF  30
0098:  MOVLW  FA
0099:  MOVWF  31
009A:  CALL   02B
009B:  DECFSZ 30,F
009C:  GOTO   098
.................... 		output_a(dd);  
009D:  MOVLW  00
009E:  BSF    03.5
009F:  MOVWF  05
00A0:  BCF    03.5
00A1:  MOVF   28,W
00A2:  MOVWF  05
.................... 		output_b(ee);  
00A3:  MOVLW  00
00A4:  BSF    03.5
00A5:  MOVWF  06
00A6:  BCF    03.5
00A7:  MOVF   29,W
00A8:  MOVWF  06
.................... 		output_c(ff);  
00A9:  MOVLW  00
00AA:  MOVWF  2F
00AB:  BSF    03.5
00AC:  MOVWF  07
00AD:  BCF    03.5
00AE:  MOVF   2A,W
00AF:  MOVWF  07
.................... 		sw_check2();  
00B0:  GOTO   03E
.................... 		delay_ms(500);  
00B1:  MOVLW  02
00B2:  MOVWF  30
00B3:  MOVLW  FA
00B4:  MOVWF  31
00B5:  CALL   02B
00B6:  DECFSZ 30,F
00B7:  GOTO   0B3
.................... 	}  
00B8:  GOTO   082
.................... }  
....................   
00B9:  SLEEP
.................... void sw_check() {  
.................... 	aaa = input_a() & 0x01;  
*
0004:  MOVLW  FF
0005:  BSF    03.5
0006:  MOVWF  05
0007:  BCF    03.5
0008:  MOVF   05,W
0009:  ANDLW  01
000A:  MOVWF  2C
.................... 	bbb = input_b() & 0x01;  
000B:  MOVLW  FF
000C:  BSF    03.5
000D:  MOVWF  06
000E:  BCF    03.5
000F:  MOVF   06,W
0010:  ANDLW  01
0011:  MOVWF  2D
.................... 	ccc = input_c() & 0x01;	  
0012:  MOVLW  FF
0013:  MOVWF  2F
0014:  BSF    03.5
0015:  MOVWF  07
0016:  BCF    03.5
0017:  MOVF   07,W
0018:  ANDLW  01
0019:  MOVWF  2E
.................... 	if(aaa)	aa = 0x02;  
001A:  MOVF   2C,F
001B:  BTFSC  03.2
001C:  GOTO   01F
001D:  MOVLW  02
001E:  MOVWF  25
.................... 	if(bbb)	bb = 0x02;  
001F:  MOVF   2D,F
0020:  BTFSC  03.2
0021:  GOTO   024
0022:  MOVLW  02
0023:  MOVWF  26
.................... 	if(ccc)	cc = 0x02;  
0024:  MOVF   2E,F
0025:  BTFSC  03.2
0026:  GOTO   029
0027:  MOVLW  02
0028:  MOVWF  27
0029:  BCF    0A.3
002A:  GOTO   096 (RETURN)
.................... }  
....................   
.................... void sw_check2() {  
.................... 	aaa = input_a() & 0x01;  
*
003E:  MOVLW  FF
003F:  BSF    03.5
0040:  MOVWF  05
0041:  BCF    03.5
0042:  MOVF   05,W
0043:  ANDLW  01
0044:  MOVWF  2C
.................... 	bbb = input_b() & 0x01;  
0045:  MOVLW  FF
0046:  BSF    03.5
0047:  MOVWF  06
0048:  BCF    03.5
0049:  MOVF   06,W
004A:  ANDLW  01
004B:  MOVWF  2D
.................... 	ccc = input_c() & 0x01;	  
004C:  MOVLW  FF
004D:  MOVWF  2F
004E:  BSF    03.5
004F:  MOVWF  07
0050:  BCF    03.5
0051:  MOVF   07,W
0052:  ANDLW  01
0053:  MOVWF  2E
.................... 	if(aaa)	aa = 0x00;  
0054:  MOVF   2C,F
0055:  BTFSC  03.2
0056:  GOTO   058
0057:  CLRF   25
.................... 	if(bbb)	bb = 0x00;  
0058:  MOVF   2D,F
0059:  BTFSC  03.2
005A:  GOTO   05C
005B:  CLRF   26
.................... 	if(ccc)	cc = 0x00;  
005C:  MOVF   2E,F
005D:  BTFSC  03.2
005E:  GOTO   060
005F:  CLRF   27
0060:  BCF    0A.3
0061:  GOTO   0B1 (RETURN)
.................... } 
